// src/api/products.api.ts
import api from "./axiosInstance"; // file api interceptor b·∫°n ƒë√£ c√≥
import type { SanPham } from "@/types/product.type";

// üîπ L·∫•y danh s√°ch s·∫£n ph·∫©m (c√≥ filter v√πng mi·ªÅn + lo·∫°i ƒë·ªì ƒÉn)
export const getAllSanPham = async (vungmien?: string, loaidan?: string) => {
  try {
    const res = await api.get("/sanpham", {
      params: { vungmien, loaidan },
    });
    return res.data as SanPham[];
  } catch (error: any) {
    console.error(
      "L·ªói l·∫•y danh s√°ch s·∫£n ph·∫©m:",
      error.response?.data || error.message
    );
    return [];
  }
};

// üîπ L·∫•y chi ti·∫øt 1 s·∫£n ph·∫©m theo MaSP
export const getSanPhamById = async (MaSP: number) => {
  try {
    const res = await api.get(`/sanpham/${MaSP}`);
    return res.data as SanPham;
  } catch (error: any) {
    console.error("L·ªói l·∫•y s·∫£n ph·∫©m:", error.response?.data || error.message);
    return null;
  }
};

// üîπ Th√™m s·∫£n ph·∫©m (admin)
export const addSanPham = async (product: SanPham) => {
  try {
    const res = await api.post("/sanpham", product);
    console.log("Th√™m s·∫£n ph·∫©m th√†nh c√¥ng:", res.data);
    return res.data;
  } catch (error: any) {
    console.error("L·ªói th√™m s·∫£n ph·∫©m:", error.response?.data || error.message);
    throw error;
  }
};

// üîπ C·∫≠p nh·∫≠t s·∫£n ph·∫©m (admin)
export const updateSanPham = async (MaSP: number, product: SanPham) => {
  try {
    const res = await api.put(`/sanpham/${MaSP}`, product);
    console.log("C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng:", res.data);
    return res.data;
  } catch (error: any) {
    console.error(
      "L·ªói c·∫≠p nh·∫≠t s·∫£n ph·∫©m:",
      error.response?.data || error.message
    );
    throw error;
  }
};

// üîπ X√≥a s·∫£n ph·∫©m (admin)
export const deleteSanPham = async (MaSP: number) => {
  try {
    const res = await api.delete(`/sanpham/${MaSP}`);
    console.log("X√≥a s·∫£n ph·∫©m th√†nh c√¥ng:", res.data);
    return res.data;
  } catch (error: any) {
    console.error("L·ªói x√≥a s·∫£n ph·∫©m:", error.response?.data || error.message);
    throw error;
  }
};
